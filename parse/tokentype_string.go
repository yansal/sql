// Code generated by "stringer -type=tokentype"; DO NOT EDIT.

package parse

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[tokenselect-0]
	_ = x[tokenas-1]
	_ = x[tokenfrom-2]
	_ = x[tokenjoin-3]
	_ = x[tokenon-4]
	_ = x[tokenwhere-5]
	_ = x[tokengroupby-6]
	_ = x[tokenorderby-7]
	_ = x[tokenlimit-8]
	_ = x[tokenoffset-9]
	_ = x[tokenasc-10]
	_ = x[tokendesc-11]
	_ = x[tokenand-12]
	_ = x[tokenin-13]
	_ = x[tokenisnull-14]
	_ = x[tokencomma-15]
	_ = x[tokenoparen-16]
	_ = x[tokencparen-17]
	_ = x[tokenop-18]
	_ = x[tokenstar-19]
	_ = x[tokenident-20]
	_ = x[tokenquotedident-21]
	_ = x[tokennumber-22]
	_ = x[tokenstring-23]
	_ = x[tokenbindvalue-24]
}

const _tokentype_name = "tokenselecttokenastokenfromtokenjointokenontokenwheretokengroupbytokenorderbytokenlimittokenoffsettokenasctokendesctokenandtokenintokenisnulltokencommatokenoparentokencparentokenoptokenstartokenidenttokenquotedidenttokennumbertokenstringtokenbindvalue"

var _tokentype_index = [...]uint8{0, 11, 18, 27, 36, 43, 53, 65, 77, 87, 98, 106, 115, 123, 130, 141, 151, 162, 173, 180, 189, 199, 215, 226, 237, 251}

func (i tokentype) String() string {
	if i < 0 || i >= tokentype(len(_tokentype_index)-1) {
		return "tokentype(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _tokentype_name[_tokentype_index[i]:_tokentype_index[i+1]]
}
